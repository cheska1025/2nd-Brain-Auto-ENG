# docker-compose.dev.yml - 개발용 통합 환경
version: '3.8'

services:
  # n8n 워크플로우 엔진
  n8n:
    image: n8nio/n8n:latest
    container_name: 2nd-brain-n8n
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n_password
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - WEBHOOK_TUNNEL_URL=http://localhost:5678
      - N8N_LOG_LEVEL=debug
    volumes:
      - ./n8n-data:/home/node/.n8n
      - ./workflows:/home/node/workflows
    depends_on:
      - postgres
      - redis
    networks:
      - 2nd-brain-network

  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: 2nd-brain-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n_password
      - POSTGRES_MULTIPLE_DATABASES=notion_cache,obsidian_index,ai_models
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - 2nd-brain-network

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: 2nd-brain-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    networks:
      - 2nd-brain-network

  # Obsidian 파일 동기화 서비스
  obsidian-sync:
    build:
      context: ./obsidian-connector
      dockerfile: Dockerfile
    container_name: 2nd-brain-obsidian-sync
    ports:
      - "3001:3001"
    environment:
      - OBSIDIAN_SYNC_URL=http://obsidian-sync:3001
      - CLAUDE_URL=http://claude-automation:3002
      - PERPLEXITY_URL=http://perplexity-automation:3003
      - LOCAL_AI_URL=http://local-ai:11434
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=debug
    volumes:
      - ./api-gateway/logs:/app/logs
    depends_on:
      - n8n
      - redis
      - postgres
      - obsidian-sync
      - claude-automation
      - perplexity-automation
      - local-ai
    networks:
      - 2nd-brain-network
    restart: unless-stopped

  # 모니터링 대시보드 (Grafana)
  grafana:
    image: grafana/grafana:latest
    container_name: 2nd-brain-grafana
    ports:
      - "3004:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=redis-datasource,postgres-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - 2nd-brain-network

  # Prometheus (메트릭 수집)
  prometheus:
    image: prom/prometheus:latest
    container_name: 2nd-brain-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - 2nd-brain-network

  # 파일 와처 서비스 (Obsidian 변경 감지)
  file-watcher:
    build:
      context: ./file-watcher
      dockerfile: Dockerfile
    container_name: 2nd-brain-file-watcher
    environment:
      - WATCH_PATH=/vault
      - API_GATEWAY_URL=http://api-gateway:3000
      - DEBOUNCE_MS=1000  # 1초 디바운스
    volumes:
      - ${OBSIDIAN_VAULT_PATH}:/vault:ro
      - ./file-watcher/logs:/app/logs
    depends_on:
      - api-gateway
    networks:
      - 2nd-brain-network
    restart: unless-stopped

  # AI 처리 서비스 (로컬 LLM)
  local-ai:
    image: ollama/ollama:latest
    container_name: 2nd-brain-local-ai
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_MODELS=llama2,codellama  # 사용할 모델들
    networks:
      - 2nd-brain-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]  # GPU 사용 시

  # Claude 웹 자동화 서비스
  claude-automation:
    build:
      context: ./ai-automation/claude
      dockerfile: Dockerfile
    container_name: 2nd-brain-claude
    ports:
      - "3002:3002"
    environment:
      - CHROME_BIN=/usr/bin/google-chrome
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      - CLAUDE_EMAIL=${CLAUDE_EMAIL}
      - CLAUDE_PASSWORD=${CLAUDE_PASSWORD}
      - SESSION_DURATION=3600
    volumes:
      - ./ai-automation/claude/sessions:/app/sessions
      - /dev/shm:/dev/shm  # 메모리 공유로 성능 향상
    networks:
      - 2nd-brain-network
    restart: unless-stopped

  # Perplexity 웹 자동화 서비스
  perplexity-automation:
    build:
      context: ./ai-automation/perplexity
      dockerfile: Dockerfile
    container_name: 2nd-brain-perplexity
    ports:
      - "3003:3003"
    environment:
      - PERPLEXITY_EMAIL=${PERPLEXITY_EMAIL}
      - PERPLEXITY_PASSWORD=${PERPLEXITY_PASSWORD}
    volumes:
      - ./ai-automation/perplexity/sessions:/app/sessions
    networks:
      - 2nd-brain-network
    restart: unless-stopped

  # API 게이트웨이 (통합 엔드포인트)
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: 2nd-brain-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - POSTGRES_URL=postgresql://n8n:n8n_password@postgres:5432/n8n
      - REDIS_URL=redis://redis_password@redis:6379
      - N8N_WEBHOOK_URL=http://n8n:5678/webhook
      - OBSIDIAN_VAULT_PATH=/vault
      - NOTION_API_KEY=${NOTION_API_KEY}
      - REDIS_URL=redis://redis_password@redis:6379
    volumes:
      - ${OBSIDIAN_VAULT_PATH}:/vault:ro  # 읽기 전용으로 마운트
      - ./sync-logs:/app/logs
    depends_on:
      - redis
      - postgres
    networks:
      - 2nd-brain-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ollama_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  2nd-brain-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
