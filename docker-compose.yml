version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: second_brain_postgres
    environment:
      POSTGRES_DB: second_brain_auto
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - second_brain_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d second_brain_auto"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: second_brain_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - second_brain_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: second_brain_ai_service
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/second_brain_auto
      - REDIS_URL=redis://redis:6379
      - AI_SERVICE_HOST=0.0.0.0
      - AI_SERVICE_PORT=8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - second_brain_network
    restart: unless-stopped
    volumes:
      - ./ai-service:/app
      - ai_service_logs:/app/logs
    command: ["python", "main.py"]

  n8n:
    image: n8nio/n8n:latest
    container_name: second_brain_n8n
    environment:
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_BASIC_AUTH_ACTIVE=false
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=UTC
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflow.json:/home/node/.n8n/workflows.json
    networks:
      - second_brain_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  n8n_data:
    driver: local
  ai_service_logs:
    driver: local

networks:
  second_brain_network:
    driver: bridge

